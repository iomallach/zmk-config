/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q       |  W       |  E        |  R        |  T  |   |  Y  |  U         |  I       |  O       |  P       | BSPC   |
// | TAB  |  A(CMD)  |  S(ALT)  |  D(CTRL)  |  F(SHFT)  |  G  |   |  H  |  J(SHFT)   |  K(CTRL) |  L(ALT)  |  ;(CMD)  |  '     |
// | SHFT |  Z       |  X       |  C        |  V        |  B  |   |  N  |  M         |  ,       |  .       |  /       | RSHFT  |
//                    | LCTRL | LWR | RET |   | SPACE | RSE  | BSLH |
                        bindings = <
   &kp ESC   &kp Q      &kp W      &kp E       &kp R       &kp T   &kp Y &kp U         &kp I           &kp O        &kp P         &kp BSPC
   &kp TAB   &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G   &kp H &hm RSHFT J   &hm RCTRL K     &hm LALT L   &hm RGUI SEMI &kp SQT
   &kp LSHFT &kp Z      &kp X      &kp C       &kp V       &kp B   &kp N &kp M         &kp COMMA       &kp DOT      &kp FSLH      &kp RSHFT
                  &kp LCTRL &mo 1 &kp RET     &kp SPACE &mo 2 &kp BSLH
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |   =  |
// | TRANS| !   | @   | #   | $   | %   |   | ^   | &   |  *  | (   |  )  |   -  |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | TRANS |     | TRANS |   | TRANS |     | TRANS |
                        bindings = <
   &kp GRAVE    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6      &kp N7     &kp N8    &kp N9    &kp N0   &kp EQUAL
   &trans       &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT      &kp CARET   &kp AMPS   &kp ASTRK &kp LPAR  &kp RPAR &kp MINUS
   &kp LSHFT    &trans       &trans       &trans       &trans       &trans         &kp LBKT    &kp RBKT   &trans    &trans    &trans   &trans
                                    &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  BT_PREV  |  BT_NEXT  |  #  |  $  |  %  |   |  ^     |  &     |  *   |  (      |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  LEFT  |  DOWN  |  UP  |  RIGHT  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _     |  +     |  {   |  }      | "|" |  ~   |
//                    | TRANS |     | TRANS |   | TRANS    |        | TRANS  |
                        bindings = <
   &kp TAB    &bt BT_PRV     &bt BT_NXT   &kp HASH       &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR &kp BSPC
   &kp LCTRL  &kp C_VOL_DN   &kp C_MUTE   &kp C_VOL_UP   &trans   &trans      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp BSLH &kp GRAVE
   &kp LSHFT  &trans         &trans       &trans         &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE &kp TILDE
                              &trans   &trans   &trans      &trans   &trans    &trans
                        >;
                };
        };
};
